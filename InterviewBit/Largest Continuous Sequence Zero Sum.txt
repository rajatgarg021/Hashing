vector<int> Solution::lszero(vector<int> &a) {
    int n = a.size();
    vector<int> v(n);
    v[0] = a[0];
    for(int i=1;i<n;i++)
    {
        v[i] = v[i-1] + a[i];
    }
    unordered_map<int, int> mp;
    int mxm = 0;
    int start = -1;
    int end = -1;
    for(int i=0;i<n;i++)
    {
        if(v[i] == 0)
        {
            int length = i+1;
            if(length > mxm)
            {
                start = 0;
                end = i;
                mxm = length;
            }
        }
        else 
        {
            if(mp[v[i]])
            {
                int length = i+1 - mp[v[i]];
                if(length > mxm)
                {
                    start = mp[v[i]];
                    end = i;
                    mxm = length;
                }    
            }
            else 
            {
                mp[v[i]] = i+1;
            }    
        }
        
    }
    vector<int> ans;
    
    if(start == -1)
    {
        return ans;
    }
    for(int i=start;i<=end;i++)
    {
        ans.push_back(a[i]);
    }
    return ans;
}
